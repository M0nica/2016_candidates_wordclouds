library(streamR)
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "oN95PGeti5dgU8qvAZEKRhoJJ"
consumerSecret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
install.packages(c("devtools", "rjson", "bit64", "httr"))
library(devtools)
install_github("twitteR", username="geoffjentry")
library(twitteR)
api_key <- "oN95PGeti5dgU8qvAZEKRhoJJ"
api_secret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO"
access_token <- "365119419-M92deY3ahk35P4GczJuDbi5SlAHkf8o0qFAZ7az2"
access_token_secret <- "mhqn4gXZa3Eu5MmlES0c5Jv3rDcFzmQ8ian10cdVX9c6k"
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
searchTwitter("iphone")
searchTwitter(Hillary Clinton)
searchTwitter("Hillary Clinton")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
library(streamR)
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
library(streamR)
load("~/Desktop/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
tweets <- searchTwitter("Obamacare OR ACA OR 'Affordable Care Act' OR #ACA", n=100, lang="en", since="2014-08-20")
load("~/Desktop/my_oauth.Rdata")
tweets <- searchTwitter("Obamacare OR ACA OR 'Affordable Care Act' OR #ACA", n=100, lang="en", since="2014-08-20")
# Install and Activate Packages
install.packages("streamR", "RCurl", "ROAuth", "RJSONIO")
library(streamR)
library(RCurl)
library(RJSONIO)
library(stringr)
install.packages("streamR", "RCurl", "ROAuth", "RJSONIO")
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "oN95PGeti5dgU8qvAZEKRhoJJ" # From dev.twitter.com
consumerSecret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO" # From dev.twitter.com
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
library(streamR)
load("my_oauth.Rdata")
filterStream(file.name = "tweets.json", # Save tweets in a json file
track = c("Affordable Care Act", "ACA", "Obamacare"), # Collect tweets mentioning either Affordable Care Act, ACA, or Obamacare
language = "en",
location = c(-119, 33, -117, 35), # latitude/longitude pairs providing southwest and northeast corners of the bounding box.
timeout = 60, # Keep connection alive for 60 seconds
oauth = my_oauth) # Use my_oauth file as the OAuth credentials
tweets.df <- parseTweets("tweets.json", simplify = FALSE) # parse the json file and save to a data frame called tweets.df. Simplify = FALSE ensures that we include lat/lon information in that data frame.
filterStream(file.name = "tweets.json", # Save tweets in a json file
track = c("Affordable Care Act", "ACA", "Obamacare"), # Collect tweets mentioning either Affordable Care Act, ACA, or Obamacare
language = "en",
location = c(-119, 33, -117, 35), # latitude/longitude pairs providing southwest and northeast corners of the bounding box.
timeout = 60, # Keep connection alive for 60 seconds
oauth = my_oauth) # Use my_oauth file as the OAuth credentials
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
debate.df <- parseTweets("tweets_debate.json", simplify = TRUE)
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
load("~/my_oauth.Rdata")
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
load("~/my_oauth.Rdata")
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
load("~/my_oauth.Rdata")
library(streamR)
load("~/my_oauth.Rdata")
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
filterStream("tweets_debate.json", track = c("bernie","sanders", "hillary", "clinton", "o'malley"), timeout = 600, oauth = my_oauth)
debate.df <- parseTweets("tweets_debate.json", simplify = TRUE)
load("my_oauth")
filterStream("tweets.json", track = c("Obama", "Biden"), timeout = 10,
oauth = my_oauth)
tweets <- searchTwitter("Obamacare OR ACA OR 'Affordable Care Act' OR #ACA", n=100, lang="en", since="2014-08-20")
# Transform tweets list into a data frame
tweets.df <- twListToDF(tweets)
install.packages("twitteR", "RCurl", "RJSONIO", "stringr")
library(RJSONIO)
library(stringr)
tweets <- searchTwitter("Obamacare OR ACA OR 'Affordable Care Act' OR #ACA", n=100, lang="en", since="2014-08-20")
# Transform tweets list into a data frame
tweets.df <- twListToDF(tweets)
load("my_oauth")
filterStream("tweets.json", track = c("Obama", "Biden"), timeout = 10,
oauth = my_oauth)
tweets_BS.df <- parseTweets("tweets_BS.json", simplify = TRUE)
TweetCorpus<-paste(unlist(tweets_BS.df$text), collapse =" ") #to get all of the tweets together
TweetCorpus <- Corpus(VectorSource(TweetCorpus))
TweetCorpus <- tm_map(TweetCorpus, PlainTextDocument)
TweetCorpus <- tm_map(TweetCorpus, removePunctuation)
TweetCorpus <- tm_map(TweetCorpus, removeWords, stopwords('english'))
TweetCorpus <- tm_map(TweetCorpus, stemDocument)
TweetCorpus <- tm_map(TweetCorpus, content_transformer(tolower),lazy=TRUE)
TweetCorpus <- tm_map(TweetCorpus, PlainTextDocument)
wordcloud(TweetCorpus, max.words = 100, random.order = FALSE)
tweets_BS.df$text <- sapply(tweets_BS.df$text,function(row) iconv(row, "latin1", "ASCII", sub=""))
library(streamR)
load("my_oauth.Rdata")
filterStream(file.name = "tweets.json", # Save tweets in a json file
track = c("Affordable Care Act", "ACA", "Obamacare"), # Collect tweets mentioning either Affordable Care Act, ACA, or Obamacare
language = "en",
timeout = 60, # Keep connection alive for 60 seconds
oauth = my_oauth) # Use my_oauth file as the OAuth credentials
tweets.df <- parseTweets("tweets.json", simplify = FALSE) # parse the json file and save to a data frame called tweets.df. Simplify = FALSE ensures that we include lat/lon information in that data frame.
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "oN95PGeti5dgU8qvAZEKRhoJJ"
consumerSecret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
8056999
install.packages("twitteR", "RCurl", "RJSONIO", "stringr")
library(RCurl)
library(RJSONIO)
library(stringr)
# Declare Twitter API Credentials
api_key <- "oN95PGeti5dgU8qvAZEKRhoJJ" # From dev.twitter.com
api_secret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO" # From dev.twitter.com
token <- "365119419-M92deY3ahk35P4GczJuDbi5SlAHkf8o0qFAZ7az2" # From dev.twitter.com
token_secret <- "mhqn4gXZa3Eu5MmlES0c5Jv3rDcFzmQ8ian10cdVX9c6k" # From dev.twitter.com
# Create Twitter Connection
setup_twitter_oauth(api_key, api_secret, token, token_secret)
# Declare Twitter API Credentials
api_key <- "oN95PGeti5dgU8qvAZEKRhoJJ" # From dev.twitter.com
api_secret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO" # From dev.twitter.com
token <- "365119419-M92deY3ahk35P4GczJuDbi5SlAHkf8o0qFAZ7az2" # From dev.twitter.com
token_secret <- "mhqn4gXZa3Eu5MmlES0c5Jv3rDcFzmQ8ian10cdVX9c6k" # From dev.twitter.com
# Create Twitter Connection
setup_twitter_oauth(api_key, api_secret, token, token_secret)
library(twitteR)
# Declare Twitter API Credentials
api_key <- "oN95PGeti5dgU8qvAZEKRhoJJ" # From dev.twitter.com
api_secret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO" # From dev.twitter.com
token <- "365119419-M92deY3ahk35P4GczJuDbi5SlAHkf8o0qFAZ7az2" # From dev.twitter.com
token_secret <- "mhqn4gXZa3Eu5MmlES0c5Jv3rDcFzmQ8ian10cdVX9c6k" # From dev.twitter.com
# Create Twitter Connection
setup_twitter_oauth(api_key, api_secret, token, token_secret)
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "oN95PGeti5dgU8qvAZEKRhoJJ"
consumerSecret <- "5UNN3rxVOx4O5RYLyYihpxT4llcEYPvVGmRpDf0n7Fycn6MpeO"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
load("~/my_oauth.Rdata")
load("my_oauth")
filterStream("tweets.json", track = c("Obama", "Biden"), timeout = 10,
oauth = my_oauth)
load("~/my_oauth.Rdata")
filterStream("tweets.json", track = c("Obama", "Biden"), timeout = 10,
oauth = my_oauth)
setwd("~/")
filterStream("tweets.json", track = c("Obama", "Biden"), timeout = 10,
oauth = my_oauth)
searchTwitter("iphone")
searchTwitter("Obama")
searchTwitter("Bernie Sander", since=2016-02-09)
searchTwitter("Bernie Sander", since="2016-02-09")
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
print(all_candidates)
shiny::runApp('all_candidates')
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df$text <- sapply(tweets_shiny.df$text, function(row) iconv(row, "latin1", "ASCII", sub=""))
TweetCorpus <- paste(unlist(tweets_shiny.df$text), collapse =" ")
TweetCorpus <- Corpus(VectorSource(TweetCorpus))
TweetCorpus <- tm_map(TweetCorpus, PlainTextDocument)
TweetCorpus <- tm_map(TweetCorpus, removePunctuation)
TweetCorpus <- tm_map(TweetCorpus, removeWords, stopwords('english'))
TweetCorpus <- tm_map(TweetCorpus, stemDocument)
TweetCorpus <- tm_map(TweetCorpus, content_transformer(tolower),lazy=TRUE)
TweetCorpus <- tm_map(TweetCorpus, PlainTextDocument)
TweetCorpus <- tm_map(TweetCorpus, PlainTextDocument)
library(streamR)
library(tm)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates/all_candidates.json", simplify = TRUE)
pwd
View(tweets_shiny.df)
View(tweets_shiny.df)
View(tweets_shiny.df)
shiny::runApp('all_candidates')
clear
library(streamR)
library(tm)
tweets_shiny.df <- parseTweets("all_candidates/all_candidates.json", simplify = TRUE)
tweets_shiny.df$text <- sapply(tweets_shiny.df$text, function(row) iconv(row, "latin1", "ASCII", sub=""))
TweetCorpus <- paste(unlist(tweets_shiny.df$text), collapse =" ")
View(tweets_shiny.df)
View(tweets_shiny.df)
View(tweets_shiny.df)
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shinyapps::setAccountInfo(name='monicapowell',
token='01692261E1EA0E55CEC30A3A4BA33707',
secret='DrVLJKwe6cknS4Zqa/X/Z+3K6mGlyB5Xy+/9CkVs')
install.packages(shinyapps)
install.packages('shinyapps')
install.packages("shiny")
install.packages("shiny")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/shinyapps")
shiny::runApp('all_candidates')
shinyapps::setAccountInfo(name='monicapowell',
token='01692261E1EA0E55CEC30A3A4BA33707',
secret='DrVLJKwe6cknS4Zqa/X/Z+3K6mGlyB5Xy+/9CkVs')
library(rsconnect)
deployApp()
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
display.brewer.all()
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
HillaryClinton <- tweets_shiny.df[grep("Hillary Clinton", tweets_shiny.df$text), ]
HillaryClinton_wo <- tweets_shiny.df[grep("HillaryClinton", tweets_shiny.df$text), ]
HilaryTotals <-rbind(HillaryClinton, HillaryClinton_wo)
view(HillaryTotals)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
shiny::runApp('all_candidates')
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
setwd("~/all-candidates")
setwd("~/all_candidates")
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
tweets_shiny.df <- parseTweets("all_candidates.json", simplify = TRUE)
#make tweets go to lowercase
HillaryClinton <- tweets_shiny.df[grep("Hillary Clinton", tweets_shiny.df$text), ]
HillaryClinton_wo <- tweets_shiny.df[grep("HillaryClinton", tweets_shiny.df$text), ]
HillaryTotals <- rbind(HillaryClinton, HillaryClinton_wo)
load(HillaryTotals)
View(tweets_shiny.df)
shiny::runApp()
shiny::runApp()
shiny::runApp()
